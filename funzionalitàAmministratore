NOTA MOLTO BENE:= ->@ HA DUE DIVERSI SIGNIFICATI: a SINISTRA dell'uguale  "=" rappresenta un ARRAY PERL  
											   a DESTRA dell'uguale "=" O DOPO UNA PARENTESI QUADRA "[" rappresenta un ATTRIBUTO XPATH
				  ->ricorda che se vuio solo il testo di un nodo devi aggiungere text() alla fine

				  ->IRRILEVANTE) SEGNALA CHE QUELLA PARTE DI TESTO, DALLA VISUALIZZAZIONE INIZIALE DELLA PAGINA FINO AL PASSAGGIO AD UN ALTRO ARGOMENTO (UN ALTRA 
				  PAGINA) RIGUARDA TEMI CHE ABBIAMO DECISO DI MANTENERE STATICI

CONTIENE MANIPOLA PER SUPERADMIN E AMMINISTRATORE

PUÒ INTERVENIRE SU 
-TABUTENTEREGISTRATO (SUPERADMIN) done
-TABAMMINISTRATORE (SUPERADMIN)  done
-TABAEREOPORTO (SUPERADMIN) DONE 
-TABCITTA (SUPERADMIN) DONE
-TABNAZIONE (SUPERADMIN) DONE
-TABTRATTA (SUPERADMIN)  AL?
-TABVOLO (SUPERADMIN)  AL? 
IRRILEVANTE)-TABAEREO (SUPERADMIN) DONE 
IRRILEVANTE)-TABTIPOAEREO (SUPERADMIN) DONE
IRRILEVANTE)-TABPRODUTTOREAEREO (SUPERADMIN) DONE
IRRILEVANTE)-TABCOMMENTO (SUPERADMIN E AMMINISTRATORE) Done(?) 
-TABSERVIZIO (SUPERADMIN) DONE
IRRILEVANTE)-TABNEWS (SUPERADMIN E AMMINISTRATORE) DONE
IRRILEVANTE)-TABFAQ (SUPERADMIN E AMMINISTRATORE) DONE

in particolare:

IRRILEVANTE)IN primo luogo devo controllare 
che l'utente abbia accesso alle 
pagine che richiede: 						$flagSA=/database/tabAmministratore/amministratore[@idA=$idSA]/superAdmin
per $idSA contenente l'id del SA 			$idSA=/database/tabUtenteRegistrato/utenteRegistrato[mail=$cookie]/@idA
per $cookie che contenga 
la mail dell'utente(?)						$cookie=/database/tabUtenteRegistrato/utenteRegistrato/mail
se $flagSA=true ok altrimenti errore 
->l'utente non è superadmin e può 
modificare solo le tabelle con un attributo diA 

le pagine a disposizione dell'amministratore SA sono:
1->UNA pagina che contiene tutte le informazioni relative a Nazioni, Citta e aereoporti
2->una pagina che si occupa di Tratte e Voli
IRRILEVANTE)3->una pagina che si occupa dei Produttori degli aerei, i tipi di aerei e gli aerei NO
4->una pagina riguardante i servizi
IRRILEVANTE)5->una pagina riguardante le news S
IRRILEVANTE)6->una pagina riguardante le faq S
IRRILEVANTE)7->una pagina riguardante i commenti S
8->UNA PAGINA RIGUARDANTE UTENTI E AMMINISTRATORI 

IMPORTANTE)NB una tabella può essere modificata solo a partire da form chiamate dalla pagina che se ne occupa QUINDI:
ESEMPIO:
1)	per creare una citta/aereoporto o nazione posso agire solo dalla pagina 1; SE POI voglio creare una nuova tratta e passo alla pagina 2 da li non posso creare
	un nuovo aereporto, ma solo scelgire da una select quelli già disponibili (è una buona soluzione?)
2)	ALLO STESSO MODO SE VOGLIO INSERIRE UN NUOVO AEREOPORTO PER UNA CTT° NON PRESENTE IN XML SULLA PAGINA 1 PRIMA CREO LA CITT° E SOLO POI POSSO CREARE IL NUOVO 
	AEREOPORTO
3) se cancello un aereoporto da pag 1 e questo era l'unico aereoporto registrato dell sua città => la città resta nel database finche SA non la elimina 
	esplicitamente
4) per cancellare una città questa non deve avere nessun aereoporto, altrimenti l'operazione va impedita (e idam per tutti gli altri casi simili)
5) per cancellare un aereoporto o un altro "elemento base" di una pagina (come volo sulla pagina 2 o aerei su 3) questo non deve avere legami che ne impediscano 
la cancellazione; nel caso di aereoporto questo non può essere cancellato se esiste almeno una tratta che lo impiega (va prima eliminata la tratta PROBLEMA Xò: QUESTO POTREBBE RENDERE TROPPO DIFFICILE LA CANCELLAZIONE?)


(Ci sono 2 array associativi aereoporto-citta citta-nazione
(key) -> (value)

citta1 -> nazione1
citta2 -> nazione1
citta1 -> nazione2
citta2 -> nazione2
citta3 -> nazione2
)

idem per aereoporto-citta

VISUALIZZAZIONE PAGINA 1

(PAG AEREOPORTI/CITTA/NAZIONI)
Pagina INIZIALE: 
Gli aereoporti sono organizzati in base alle città alle quali appartengono, a loro volta divise in base alla nazione di appartenenza 
	->trovo tutte le nazioni presenti nel db	@nazioni=/database/tabNazione/nazione/@idN
	->per ogni nazione cerco le citta servite	@citta(foe each $nazioni in @nazioni)=/database/tabCitta/citta[@idN=$nazioni]/@idC
	->di ogni nazione rendo visibile il nome	$nazioni/nome
	->e il nome delle citta che gi appartengono	$nomeCitta=$citta/nome
	->il nome di ogni città è seguito dai nomi 
	degli aereoporti ad esso legati $nomeAp,	@nomeAp=per ogni $citta in @citta, per ogni $nazioni in @nazioni
												/database/tabAereoporto/aereoporto[@idC=$citta]/nome

NB facendo così possono esistere città prive di aereoporto, con formato che si riconduce ad una struttura come questa:
nazione1								->"cancella nazione"	->"aggiungi citta"
	citta1								->"cancella citta"		->"aggiungi aereoporto"
		aereoporto1						->"cancella aereoporto"	
		aereoporto2						->"cancella aereoporto"
	citta2								->"cancella citta"		->"aggiungi aereoporto"
nazione2								->"cancella nazione"	->"aggiungi citta"
	citta1								->"cancella citta"		->"aggiungi aereoporto"
		aereoporto1						->"cancella aereoporto"
		aereoporto2 					->"cancella aereoporto"
	citta2								->"cancella citta"		->"aggiungi aereoporto"
		aereoporto1						->"cancella aereoporto"
	citta3								->"cancella citta"		->"aggiungi aereoporto"
		aereoporto1 					->"cancella aereoporto"
			info x questo aereoporto
->"crea nuova nazione"

COSA PUO FARE SA:

1-A)PER INSERIRE AEREOPORTO
->una volta entrato nella pagina 
di modifica
->seleziona la citta per la quale si vuole creare un nuovo aereoporto
seleziona pulsante(?) "INSERISCI NUOVO Aereoporto"  
->Salvo $idCitta, contenente l'id 
della città per la quale vogliamo 
creare un nuovo aereoporto 					$idCitta=/database/tabCitta/citta[nome=$nomeSelez]/@idC
con $nomeSelez ricavato da perl in base 
al nome della città selezionata dall'utente
->l'utente inserisce nella form richiamata dal bottone
il nome del nuovo aereoporto, che viene salvato da perl su $nomeAp 
->creo un nuovo nodo Aereoporto con 
idAp=$numeroMax, nomeAp=$nomeAp e  $numeroMax=massimo(@idAp=/database/tabAereoporto/aereoporto/@idAp)+1 
idC=$idCitta		 							
	NB: potrebbe essere una buona cosa sostituire $numeroMax 
	con una variabile $nuovoID che cerca il primo buco tra gli id e lo riempie
	=> si usa un ciclo su @idAp			@idAp=/database/tabAereoporto/aereoporto/@idAp
	: foreach ($idAp){				$precedente=valore iniziale:-1, aumenta di una unità ad ogni ciclo
		if($idAp!=$precedente+1){ 		cioè c'è un id mancante
			$nuovoId=$precedente+1		
			break				MI FERMO NON ESEGUO I SUCCESSIVI CICLI			
		}
	} 
AGGIORNO PAGINA

1-B)PER CANCELLARE AEREOPORTO
->utente seleziona un aereoporto dai visibili
->salvo il nome dell'aereoporto da cancellare:  $nomeDaCancellare
->seleziono l'id dell'aereoporto $daCancellare	$daCancellare=/database/tabAereoporto/aereoporto[nome=$nomeDacancellare]/@idAp
->controllo se quell'aereoporto era impiegato 
da qualche tratta
	->if($inPartenza=/database/tabTratta/tratta[@idApP=$daCancellare]/idT OR $inarrivo=/database/tabTratta/tratta[@idApP=$daCancellare]/idT){
				$flagIntoccabile=true;
			}
			else{
				$flagIntoccabile=false;
			}
		}
		visto che se esistono 
		tratte che partono @partenzaT 	 		@partenzaT=/database/tabTratta/tratta[@idApP=$daCancelllare]/@idT
		o arrivano @arrivoT da quell'aereoporto @arrivoT=/database/tabTratta/tratta[@idApP=$daCancelllare]/@idT
		allora quella città è intoccabile perche servita da una tratta;
		MA POSSO RENDERLA INATTIVA:
		->cambio il valore del sottoemenento flagAttivoda TRUE a FALSE sul nodo corrispondenta a $daCancellare: 
												$modificaFlag=/database/tabAereoporto/aereoporto[@idC=$daCancellare]/flagAttivo
												=>$modificaFlag=false		
			->SE $flagIntoccabile=FALSE elimino l'aereoporto dal database
AGGIORNO PAGINA


1-C)PER INSERIRE UNA NUOVA CITTA
->(la città appartiene ad una nazione già
inserita) l'utente seleziona la nazione per
 la quale vuole inserire una nuova citta
-> salvo l'id della nazione scelta dall'utente 	$idNaz=/database/tabNazione/nazione[nome=$nomeSelez]/@idN	
->SA clicca "aggiungi una città" e inserisce 
il nome della stessa nella form richiamata dal bottone
->perl ricava il nome della nuova città $nomeC
->creo la nuova città su tabCitta tc
nome=$nomeC, @idN=$idNaz e ricavo l'attributo idC 
con algoritmo simile a quello 
impiegato per aereoporto:
idC=$numeroMax									$numeroMax=massimo(@idC=/database/tabCitta/citta/@idC)+1 
		
	NB: potrebbe essere una buona cosa sostituire $numeroMax 
	con una variabile $nuovoID che cerca il primo buco tra gli id e lo riempie
	=> si usa un ciclo su @idC			@idC=/database/tabCitta/citta/@idC
	: foreach ($idC){				$precedente=valore iniziale:-1, aumenta di una unità ad ogni ciclo
		if($idC!=$precedente+1){ 		cioè c'è un id mancante
			$nuovoId=$precedente+1		
			break				MI FERMO NON ESEGUO I SUCCESSIVI CICLI			
		}
	} 
AGGIORNO PAGINA

1-D)PER CANCELLARE UNA CITTÀ
(-> se la città è l'unica servita della nazione (cosa immediatamente visibile all'utente)
->clicco elimino nazione(? più semplice e veloce ma forse non buono qualora si 
voglia poi inserire un altra citta? BHE può nserire prima e eliminare dopo!))
->utente seleziona una citta da eliminare 
e preme il bottone "ELIMINA CITTà"
->cerco l'id della citta 					$idCitta=/database/tabNazione/nazione[nome=$nomeCliccato]/@idC
->controllo se la citta ha degli 
aereoporti serviti							@idApC=/database/tabAereoporto/aereoporto[@idC=$idCitta]/@idAp
	->SE @idApC!=0 ha valore TRUE non posso cancellare la citta	
		MA POSSO RENDERLA INATTIVA:
		->cambio il valore del sottoemenento flagAttivo da TRUE a FALSE sul nodo corrispondenta a $daCancellare: 
												$modificaFlag=/database/tabCitta/citta[@idC=$daCancellare]/flagAttivo
												=>$modificaFlag=false		
	->SE FALSE elimino la città dal database
AGGIORNO PAGINA


1-E)PER INSERIRE UNA NAZIONE
->SA clicca bottone "INSERISCI UNA NUOVA NAZIONE"
->ricerco $idNewN secondo uno 
dei due algoritmi disponibili
$idNewN=$numeroMax							$numeroMax=(massimo(@idN=/database/tabNazione/nazione/@idN))+1 
		
	NB: potrebbe essere una buona cosa sostituire $numeroMax 
	con una variabile $nuovoID che cerca il primo buco tra gli id e lo riempie
	=> si usa un ciclo su @idN			@idN=/database/tabNazione/nazione/@idN
	: foreach ($idC){					$precedente=valore iniziale:-1, aumenta di una unità ad ogni ciclo
		if($idC!=$precedente+1){ 		cioè c'è un id mancante
			$nuovoId=$precedente+1		
			break				MI FERMO NON ESEGUO I SUCCESSIVI CICLI			
		}
	} 
->SA inserisce il nome della 
nuova nazione e perl lo salva 
su $nomeN
->salvo un nuovo nodo nazione 
su tabNazione tc nome=$nomeN,
idN=$idNewN  
AGGIORNO PAGINA

1-F)PER CANCELLARE UNA NAZIONE
->SA seleziona una nazione da cancellare 
->salvo l'id della nazione 
da cancellare 						$idNaz=/database/tabNazione/nazione[nome=$nomeCliccato]/@idN
->controllo se questo è contenuto 
nell'attributo @idN di qualche citta
->se TRUE=> non posso cancellare la nazione
		MA POSSO RENDERLA INATTIVA:
		->cambio il valore del sottoemenento flagAttivoda TRUE a FALSE sul nodo corrispondenta a $daCancellare: 
												$modificaFlag=/database/tabNazione/nazione[@idC=$daCancellare]/flagAttivo
												=>$modificaFlag=false		
->se FALSE=> cancello dal xml la nazione con quell'id

VISUALIZZAZIONE PAGINA 2
(PAG VOLI/TRATTE)
ORGANIZZATO DA ALESSANDRO
TABVOLO (SUPERADMIN) e TABTRATTE
hanno un rapporto simile a quello tra AEREO e TIPOAEREO: ogni volo deve fare riferimento ad una tratta e una tratta può avere più voli;
la pagina di visualizzazione dell'amministratore potrebbe quindi avere un'organizzazione:
tratta1
	volo1
		aereofisico1
	volo2
		aereofisico2
	volo3
		aereofisico3
	volo4
		aereofisico1
tratta2
	volo1
		aereofisico2
	volo2
		aereofisico3
	volo3
		aereofisico4
pulsanti crea tratta crea volo 
->dunque: trovo tutte le tratte disponibili 	@tratte=/database/tabTratta/tratta/@idT
->per ogni $tratte in tratte trovo i voli 	@voli=/database/tabVolo/volo[@idT=$tratta]/@idV (trova i voli di una tratta)=> ho 
						cardinalità@tratte array! ed ogni array può avere un diverso numero di elementi!(ouch)
->per visuazizzare una tratta devo renderla 
identificabile: devo recuperare i nomi degli 
aereoporti coinvolti, delle rspettive citta e nazioni
	->per ogni tratta quindi cerco gli id dell'
	aereoporto $partenza e $arrivo		$partenza= /database/tabTratta/tratta[@idT=$tratte]/@idApP 
						$arrivo= /database/tabTratta/tratta[@idT=$tratte]/@idApA
	->i nomi dagli aereoporti 
	$nomePart e $nomeArr			$nomePart=/database/tabAereoporto/aereoporto[@idAp=$partenza]/nome
						$nomeArr=/database/tabAereoporto/aereoporto[@idAp=$arrivo]/nome
	->gli id delle citta
	$cittaPart e $cittaArr			$cittaPart=/database/tabAereoporto/aereoporto[@idAp=$partenza]/@idC 
						$cittaArr=/database/tabAereoporto/aereoporto[@idAp=$arrivo]/@idC
	->i nomi delle citta
	$nomeCP e $nomeCA			$nomeCP=/database/tabCitta/citta[@idC=$cittaPart]/nome
						$nomeCA=/database/tabCitta/citta[@idC=$cittaArr]/nome
	->gli id delle nazioni
	$nazPart e $nazArr			$nazPart=/database/tabCitta/citta[@idC=$cittaPart]/@idN 
						$nazArr=/database/tabCitta/citta[@idC=$cittaArr]/@idN
	->i nomi delle nazioni
	$nomeNP e $nomeNA			$nomeNP=/database/tabNazione/nazione[@idN=$nazPart]/nome
						$nomeNA=/database/tabNazione/nazione[@idN=$nazArr]/nome
e visualizzo=> tratta 1: partenza:$nomeCP (aereoporto:$nomePart), $nomeNP; arrivo: $nomeCA (aereoporto:$nomeArr), $nomeNA;
SEGUONO i voli di questa tratta: 
ho bisogno dell'orario di partenza e arrivo e giorno per identificarli
dunque per ogni volo di una tratta $tratte	@voli=/database/tabVolo/volo[@idT=$tratte]/@idV
stampo i campi $oraPartenza, $oraArrivo,
$giorno seguiti dal $prezzo 			$campo= /database/tabVolo/volo[@idT=$voli]/campo (campo=segnaposto per il campo che ci 						interessa)
	PER INSERIRE UNA NUOVA TRATTA (possono esistere tratte prive di voli=> non seve eliminare una tratta senza voli (?**))
	PER INSERIRE UN NUOVO VOLO
	PER ELIMINARE UN VOLO
	PER ELIMINARE UNA TRATTA

PROBLEMA DELLA RELAZIONE VOLI AEREI
un volo è un evento che si ripete una vlta alla settimana in un giorno e con egli orari stabiliti
un dato volo può essere eseguito da aerei diversi in settimane diverse MA per SEMPLIFICARE POSSIAMO INTRODURRE UN VINCOLO
che prevede che un volo viene eseguito sempre dallo stesso aereo ogni settimana
un aereo in un giorno può effettuare uno o più voli, e in una settimana effettuerà più voli
come rappresentare questa relazione?
SOLUZIONE XML:
È il volo ad aver memoria in uno dei suoi campi dell'id dell'aereo e non viceversa
SOLUZIONE PERL/VISIBILE:
dalla pagina del volo (che è poi quella delle tratte) ci sarà un link c il nome dell'aereo: in caso di necessità di cambiare l'aereo che effettuerà il volo si avra a disposizione un PULSANTE "cambia aereo"che permettera di eliminare IL LEGAME tra le due entita (MA NON CANCELLERÀ il vecchio aereo) per crearene uno nuovo
=>OPZIONE: CREA NUOVO AEREO (COME SOPRA)
=>OPZIONE: scegli tra quelli esistenti 
	->mostro al SA una lista con i nomi degli aerei che quel giorno non effettuano un volo in quelle ore [e si trovano in quell'aereoporto/in quella città/in quella nazione]


NB(**) QUESTO POTREBBE VALERE NON SOLO PER LE TRATTE MA ANCHE PER NAZIONE, CITTA, TIPOAEREO => SE LI RENDIAMO VISIBILI AL SOLO SUPERADMIN SI POTREBBERO TENERE ANCHE SENZA AVERE DEI SOTTOINSIEMI DI APPARTENENZA, SE È POSSIBILE/ CONVENIENTE, PER CANCELLARLI L'ADMIN INTERVIENE ESPLICITAMENTE, PER AGGIUNGER QUALCOSA A QUESTE CA
	(wow più complesso del previsto)

un aereo fisico si trova in un dato aereoporto



IRRILEVANTE)VISUALIZZAZIONE PAGINA 3

(PAG AEREI/MODELLI/PRODUTTORI)
Gli aerei sono oggetti fisici che possono essere impiegati per compiere voli. Un aereo può eseguire più voli in una giornata
=> possono esistere più record che collegano un aereo a diversi voli MA NON diversi aerei ad uno stesso volo(?)
=> dovrebbero probabilmente avere una pagina dedicata: se un volo è cancellato l'aereo che lo compiva resta disponibile per altri voli;
ogni aereo ha un modello ritrovato su TipoAereo, dunque la pagina (è ORGANIZZATA COME PAGINA 1) dovrebbe presentare sia le caratteristice del aereo che del
 modello e del produttore.

la pagina è organizzata in base ai nomi dei produttori degli aerei, seguiti dai nomi dei modelli aquistati e dalle loro caratteristiche seguiti da una lista
 contenente gli aerei e le loro proprietà personali
->trovo tutti gli id e i nomi deii produttori 
presenti nel db								@idProd=/database/tabProduttoreAereo/produttoreAereo/@idPA
											@nomiProd=/database/tabProduttoreAereo/produttoreAereo/nome
->per ogni produttore cerco i gli id e i nomi
modelli aquistati							@idModelli(for each $idProd in @idProd)=/database/tabTipoAereo/tipoAereo[@idPA=$idProd]/@idTA
											@NomiModelli(for each $idProd in @idProd)=/database/tabTipoAereo/tipoAereo[@idPA=$idProd]/@idTA
	->per ogni modello cerco le sue caratteristiche $"campo"=(for each $idModelli in @idModelli)/database/tabTipoAereo/tipoAereo[@idTA=$idModelli]/"campo"
	dove campo prende il valore di:
	-numeroPosti
	-lunghezza
	-aperturaAlare
	-diametroFusoliera
	-altezza
	-superficieAlare
	-pesoVuoto 
	-pesoMaxDecollo
	-CapacitaCombustibile
	-numeroMotori
	-tipoMotori 
	-spintaMotori 
	-velocitaMax
	-velocitaCrociera  
	-autonomia 
	-infoSediliFile;											
	->a seguire per ogni modello
	metto gli'id 
	(?O INSERIAMO UN CAMPO NOME ANCHE PER AEREO?) 
	degli aerei di quel tipo 			@idAereo=(for each$idModelli)/database/tabTipoAereo/tipoAereo[@idTA=$idModelli]/@idAe
		->per ogni aereo va poi specificato 
		lo stato e le sue noteVarie		$campo=(for each $idAereo)/database/tabAereo/aereo[@idAe=@idAereo]/campo
NB facendo così possono esistere produttori privi di tipiaerei, con formato che si riconduce ad una struttura come questa:
produttore1								->"cancella produttore"	->"aggiungi tipoaAereo"
	tipoaAereo1								->"cancella tipoaAereo"		->"aggiungi aereo"
		caratteristiche

		aereo1						->"cancella aereo"	
			stato 					->"modifica campo"
			noteVarie 				->"modifica campo"
		aereo2						->"cancella aereo"
	tipoaAereo2						->"cancella tipoaAereo"		->"aggiungi aereo"
		caratteristiche

		aereo1						->"cancella aereo"	
			stato 					->"modifica campo"
			noteVarie 				->"modifica campo"
->"crea un nuovo produttore"
NB si possono usare le note
 sull'aereo per dire quando è stato revisionato o altro se serve 
tipo aerei ha una pagina a se nel sito per utente normale (la nostra flotta), dunque ha una pagina dedicata dove è possibile aggiungere, modificare(?) o elimimare un elemento.


3-A)PER INSERIRE UN AEREO
->utnte clicca "inserisci un nuovo aereo"
->cerco l'id da usare con meccanismo simile a quello usato sopra per $nuovoId su aereoporti
$idNewAe=$numeroMax							$numeroMax=(massimo(@idAe=/database/tabAereo/aereo/@idAe))+1 
		
	NB: potrebbe essere una buona cosa sostituire $numeroMax 
	con una variabile $nuovoID che cerca il primo buco tra gli id e lo riempie
	=> si usa un ciclo su @idN			@idN=/database/tabAereo/aereo/@idA
	: foreach ($idC){					$precedente=valore iniziale:-1, aumenta di una unità ad ogni ciclo
		if($idC!=$precedente+1){ 		cioè c'è un id mancante
			$nuovoId=$precedente+1		
			break				MI FERMO NON ESEGUO I SUCCESSIVI CICLI			
		}
	} 
->utente inserisce nome dell'aereo, lo stato ed eventuali noteVarie (su variabili con gli stessi nomi)
->creo nodo sulla tabella /database/tabAereo con i dati registrati
AGGIORNA PAGINA

3-B)PER CANCELLARE UN AEREO
-> seleziono un aereo da  cancellare
->perl ricava l'id dell'aereo 	   $daCancellare=$idAerei[nome=$parametroPerl]
->controllo se quell'aereo serve 
su qualche volo 					@voliLegati=/database/tabVolo/volo[@idAe=$daCancellare]/@idV
	->SE TRUE @voliLegati!=0 =>
	non posso cancellare l'aereo 
	prima di aver modificato quei voli
	->SE FALSE proseguo senza problemi
->elimino il nodo con quell'id 
AGGIORNA PAGINA

3-C)PER INSERIRE UN NUOVO TIPOAEREO
->cerco l'id come su $nuovoId su tabTipoAereo
$idNewTA=$numeroMax							$numeroMax=(massimo(@idTA=/database/tabTipoAereo/tipoaereo/@idTA))+1 
NB: potrebbe essere una buona cosa sostituire $numeroMax 
con una variabile $nuovoID che cerca il primo buco tra gli id e lo riempie
	=> si usa un ciclo su @idTA			@idTA=/database/tabTipoAereo/tipoAereo/@idTA
	: foreach ($idTA){					$precedente=valore iniziale:-1, aumenta di una unità ad ogni ciclo
		if($idC!=$precedente+1){ 		cioè c'è un id mancante
			$nuovoId=$precedente+1		
			break				MI FERMO NON ESEGUO I SUCCESSIVI CICLI			
		}
	}
->salvo i parametri inseriti dall'utente sulla form in variabili $nomecampo
->inserisco il nuovo record tipo aereo nella tabella
AGGIORNA PAGINA

3-D)PER CANCELLARE UN TIPOAEREO	
->salvo il nome del tipoAereo da cencellare $nomeTA (selezionato dall'utente)
->cerco l'id corrispondente		    	$idDaCancellare=/database/tabTipoAereo/TipoAereo[nome=$nomeTA]/@idTA
->controllo che questo non abbia aerei 	$flagAerei=true se @AereiPerTA=/database/tabAereo/aereo[@idTA=$idDaCancellare]/@idAe ha almeno un elemento  
	->se $flagAerei=TRUE interrompo 
	=> segnalo che non posso eliminare un tipoaereo che ha aerei potenzialmente usati
	->altrimenti proseguo
->elimino il nodo tipoAereo
AGGIORNA PAGINA

3-E)PER INSERIRE IN PRODUTTORE
->cerco l'id come su $nuovoId su TabProduttoreAereo
$idNewTA=$numeroMax							$numeroMax=(massimo(@idTA=/database/tabProduttoreAereo/produttoreAereo/@idPA))+1 
NB: potrebbe essere una buona cosa sostituire $numeroMax 
con una variabile $nuovoID che cerca il primo buco tra gli id e lo riempie
	=> si usa un ciclo su @idPA			@idPA=/database/tabProduttoreAereo/produttoreAereo/@idTA
	: foreach ($idTA){					$precedente=valore iniziale:-1, aumenta di una unità ad ogni ciclo
		if($idC!=$precedente+1){ 		cioè c'è un id mancante
			$nuovoId=$precedente+1		
			break				MI FERMO NON ESEGUO I SUCCESSIVI CICLI			
		}
	}
->salvo il nome del nuovo produttore inserito dall'utente sulla form nella variabile $nomeP
->inserisco il nuovo record produttore nella tabella tabProduttoreAereo
AGGIORNO PAGINA

3-F)PER CANCELLARE UN PRODUTTORE
->salvo il nome del produttoreAereo da cencellare $nomePA (selezionato dall'utente)
->cerco l'id corrispondente		    	$idDaCancellare=/database/tabProduttoreAereo/produttoreAereo[nome=$nomePA]/@idPA
->controllo che questo non abbia tipoAerei 	$flagTipiAerei=true se @TipiAereiPerPA=/database/tabProduttoreAereo/ProduttoreAereo[@idPA=$idDaCancellare]/@idAe ha
 											almeno un elemento  
	->se $flagTipiAerei=TRUE interrompo 
	=> segnalo che non posso eliminare un tipoaereo che ha TipiAerei potenzialmente usati
	->altrimenti proseguo
->elimino il nodo ProduttoreAereo
AGGIORNA PAGINA



VISUALIZZAZIONE PAGINA 4

(PAG SERVIZI)
si puo mantenere l'organizzazione usata per il sito UTENTE:
In termini di organizzazione si potrebbe usare semplicemente l'ordine alfabetico (?)
->entro nella tabella tabServizi
->creo un array contenente 
i nomi dei servizi 		@servizi=/database/tabServizio/servizio/nome
->organizzo questo
array in ordine alfabetico
->per ogni servizio: 
	->display il contenuto 
	di $servizi
	->display $prezzo e 
	$descrizionecontenuto	$prezzo=database/tabServizio/servizio[nome=$servizi]/prezzo
				$descrizione=database/tabServizio/servizio[nome=$servizi]/descrizione
NB postrebbe servire un campo link in questa tabella per associare al servizio un sito di link al quale operare
OLTRE A QUESTO a fine pagina deve essereci un bottone "inserisci nuovo servzio"; e accanto ad ogni servizio deve esseci un bottone elimina servizio
NB è possibile che questo servizio sia impiegato in una qualche prenotazione =>non posso cancellarlo (OR se posso devo far si che l'utente ne venga a 
conoscienza/che quel record su servizio prenotato sia cancellato... non fa parte della tabella prenotazione (cui neanche SA può toccare) quindi si potrebbe fare)

4-A)PER INSERIRE UN NUOVO SERVIZIO

->utnte clicca "inserisci un nuovo servizio"
->cerco l'id da usare con meccanismo simile a quello usato sopra per $nuovoId su aereoporti
$idNewS=$numeroMax							$numeroMax=(massimo(@idServ=/database/tabServizio/servizio/@idS))+1 
		
	NB: potrebbe essere una buona cosa sostituire $numeroMax 
	con una variabile $nuovoID che cerca il primo buco tra gli id e lo riempie
	=> si usa un ciclo su @idN			@idN=/database/tabServizio/servizio/@idS
	: foreach ($idC){					$precedente=valore iniziale:-1, aumenta di una unità ad ogni ciclo
		if($idC!=$precedente+1){ 		cioè c'è un id mancante
			$nuovoId=$precedente+1		
			break				MI FERMO NON ESEGUO I SUCCESSIVI CICLI			
		}
	} 
->utente inserisce nome del servizio, la descrizione e il prezzo(su variabili con gli stessi nomi)
->creo nodo sulla tabella /database/tabServizio con i dati registrati
AGGIORNA PAGINA

4-B)PER ELIMINARE UN SERVIZIO

->salvo il nome del servizio da cencellare  $nomeS (selezionato dall'utente)
->cerco l'id corrispondente		    		$idDaCancellare=/database/tabServizio/servizio[nome=$nomeS]/@idS
->controllo che questo non sia impiegato 	$flagServPrenotato=true se @servPrenotato=/database/tabServizioPernotato/ServizioPernotato[@idSP=$idDaCancellare]
											/@idSP ha almeno un elemento
in qualche pernotazione						  
	->se $flagServPren=TRUE interrompo 
	=> segnalo che esitono prenotazioni che hanno richiesto quel servizio e che quindi non posso eliminarlo
		MA POSSO RENDERLO INATTIVO:
		->cambio il valore del sottoemenento flagAttivoda TRUE a FALSE sul nodo corrispondenta a $daCancellare: 
												$modificaFlag=/database/tabServizio/servizio[@idC=$daCancellare]/flagAttivo
												=>$modificaFlag=false		
	->altrimenti proseguo
		->elimino il nodo 
AGGIORNA PAGINA



IRRILEVANTE)VISUALIZZAZIONE PAGINA 5

(PAG NEWS)
In termini di organizzazione i vari articoli sono organizzati in base alla data e identificati dal titolo
->entro nella tabella tabNews
->creo un array contenente le date @date=/database/tabNews/news/testo/data
->organizzo questo
array in base alla data più recente
(? se esite una libreria per farlo 
se possibile darebbe un ordine 
alla pagina finale)
->per ogni $data posso trovare 
gli articoli che sono stati scritti 
in quella data 			@articoli= articoli scritti in una data /database/tabNews/news/testo[data=$date]/@idN
(?posso usare un array associativo che 
leghi una data ai suoi articoli?)
->per ogni data: 
	->display il contenuto 
	di $data
	->display $titolo e $contenuto 
	di ogni articolo in @articoli 
	di quella data		$titolo=database/tabNews/news[@idN=$articoli]/testo/titolo
				$contenuto=database/tabNews/news[@idN=$articoli]/testo/contenuto

4-A)PER INSERIRE UNA NUOVA NOTIZIA

->utnte clicca "inserisci una nuova notizia"
->cerco l'id da usare con meccanismo simile a quello usato sopra per $nuovoId su aereoporti
$idNewS=$numeroMax							$numeroMax=(massimo(@idServ=/database/tabNews/news/@idNe))+1 
		
	NB: potrebbe essere una buona cosa sostituire $numeroMax 
	con una variabile $nuovoID che cerca il primo buco tra gli id e lo riempie
	=> si usa un ciclo su @idN			@idN=/database/tabNews/news/@idNe
	: foreach ($idC){					$precedente=valore iniziale:-1, aumenta di una unità ad ogni ciclo
		if($idC!=$precedente+1){ 		cioè c'è un id mancante
			$nuovoId=$precedente+1		
			break				MI FERMO NON ESEGUO I SUCCESSIVI CICLI			
		}
	} 
->utente inserisce nome del servizio, la descrizione e il prezzo(su variabili con gli stessi nomi)
->perl inserisce la data sulla variabile $data (funzione di libreria)
->creo nodo sulla tabella /database/tabServizio con i dati registrati
AGGIORNA PAGINA

4-B)PER ELIMINARE UNA NOTIZIA

->salvo il nome della notizia da cencellare $nomeNe (selezionato dall'utente)
->cerco l'id corrispondente		    		$idDaCancellare=/database/tabNews/news[nome=$nomeNe]/@idNe
->elimino il nodo news
AGGIORNA PAGINA


IRRILEVANTE)VISUALIZZAZIONE PAGINA 6

In termini di organizzazione i vari articoli sono organizzati in base all'argomento (bagagli, documenti di imbarco ecc), ed identificati dal titolo (la struttura usata da ryanair).
per visualizzarle dunque:
->entro nella tabella tabFaq
->creo un array contenente gli argomenti @argomenti=/database/tabFaq/faq/argomento
->organizzo alfabeticamente questo
array(?se possibile darebbe un ordine 
alla pagina finale, 
anche se non so se è il MIGLIORE ordine possibile)
->per ogni $argomento posso trovare 
gli articoli lo riguardano 		@articoli= articoli di un argomento /database/tabFaq/faq[argomento=$argomenti]/@idF
(?posso usare un array associativo che 
leghi un argomento ai suoi articoli?)
->per ogni argomento: 
	->display il contenuto 
	di $argomento
	->display $titolo e $contenuto 
	di ogni articolo in @articoli 
	di quell'argomento		$titolo=database/tabFaq/faq[@idF=$articoli]/testo/titolo
							$contenuto=database/tabFaq/faq[@idF=$articoli]/testo/contenuto

3-A)PER INSERIRE UN ARTICOLO
->utnte clicca "inserisci un nuova faq"
->cerco l'id da usare con meccanismo simile a quello usato sopra per $nuovoId su aereoporti
$idNewAe=$numeroMax							$numeroMax=(massimo(@idAe=/database/tabFaq/faq/@idF))+1 
		
	NB: potrebbe essere una buona cosa sostituire $numeroMax 
	con una variabile $nuovoID che cerca il primo buco tra gli id e lo riempie
	=> si usa un ciclo su @idN			@idN=/database/tabFaq/faq/@idF
	: foreach ($idC){					$precedente=valore iniziale:-1, aumenta di una unità ad ogni ciclo
		if($idC!=$precedente+1){ 		cioè c'è un id mancante
			$nuovoId=$precedente+1		
			break				MI FERMO NON ESEGUO I SUCCESSIVI CICLI			
		}
	} 
->utente inserisce l'argomento, il titolo, contenuto (su variabili con gli stessi nomi)
->perl registra la data e l'id dell'amministratore che ha creato l'articolo (su variabili con gli stessi nomi)
->creo nodo sulla tabella /database/tabFaq con i dati registrati
NB $argomento, $idAutore sono campi di un record Faq, mentre $titolo e $contenuto appartengono all'elemento complesso Testo di Faq 
AGGIORNA PAGINA

3-B)PER CANCELLARE UN ARTICOLO
-> seleziono un articolo da cancellare
->perl ricava l'id dell'articolo    $daCancellare[=$parametroPerl]=$idFaq
->elimino il nodo con quell'id 
AGGIORNA PAGINA



IRRILEVANTE)VISUALIZZAZIONE PAGINA 7

In termini di organizzazione i vari commenti sono organizzati in base alla data (piu recenti in primo piano così che quelli da manipolare maggiormente siano subito
visibili) e al volo a chi si rifersiscono(?).
per visualizzarle dunque:
->entro nella tabella tabCommento
->creo un array contenente le date @date=/database/tabCommento/commento/testo/data
->organizzo questo array in base all'attributo @idV
(?se possibile darebbe un ordine 
alla pagina finale, 
anche se non so se è il MIGLIORE ordine possibile)
->per ogni $date posso trovare 
i commenti la riguardano 		@commento= Commento di un argomento /database/tabCommento/commento/testo[data=$date]/@idC (OK?)
(?posso usare un array associativo che 
leghi una data ai suoi commenti?)
->per ogni commento: 
	->display il titolo, il contenuto,			$titoloComm, $contenutoComm,$dataComm=/database/tabCommento/commento[@idCo=$commento]/testo/campo
	la data (elementi del sottoelemento testo) 
	NB l'argomento del commento,
	viente scritto una volta sola, 
	seguito appunto da tutti i sui "record" 
	il nome e la data del volo ($campoVolo)     $nomeVolo=/database/tabVolo/volo[@idV=$voloComm(ricavato come sopra)]/nome
	->devo inoltre visualizzare il nome dell'autore $moneAut=/database/tabUtenteRegistrato/utenteRegistrato[@idUR=$idAutore]/mail
													$idAutore=/database/tabCommento/commento[@idCo=$commento]/@idUR

	->di ogni commento bisogna inoltre specificare 
	se è stato già approvato OR se è un commento nuovo
	(il campo puo essere false solo PRIMA CHE SA LO RIFIUTI O LO ACCETTI
	una volta che è stato preso in considerazione
	viene eliminato o inserito 
	tra i commenti visibili) 					$flagApprovato=/database/tabCommento/commento[@idCo=$commento]/abilitato
La pagina consente al SA di decidere quali dei commenti inseriti dagli utenti
vengono tenuti e quali invece vengono rifiutati
DUE BOTTONI PER OGNI COMMENTO: "accetta" "rifiuta"

7-A)ACCETTAZIONE DEL COMMENTO
->utente seleziona il commento da accettare
->perl recupera l'id 							$idAccettato=/database/tabCommento/commento[@idvolo=$voloRif and @idUtente=$utenteRif]/@idCo
->perl cambia il valore del campo "abilitato" da false a true
->perl imposta @idA al valore ricavato dal cookie dell'utente
->AGGIORNA LA PAGINA

7-B)RIFIUTO DEL COMMENTO  
->perl recupera l'id del commento da eliminare $daEliminare=/database/tabCommento/commento[@idUR=$idAutore and @idV=$Comm and data=$dataComm]/@idCo
->chiedo conferma: "vuoi eliminare il commento scritto il $dataComm di $nomeAut, eseguito sul volo $nomeVolo?"
	-> se SI: elimino il nodo commento con quell'id
		->AGGIORNO LA PAGINA
	->altrimenti torno alla pagina iniziale di visualizzazione commenti senza aver eseguito nulla



VISUALIZZAZIONE PAGINA 8

1 "tabella" contenente i dati degli utenti registrati CON CAMPO CHE SPECIFICA SE SONO ANCHE AMMINISTRATORI O ADDIRITTURA SA)
->scorro tutta la tabella tabUtenteRegistrato @idUtenti
->registro gli id degli utenti registrati				@id=/database/tabUtenteRegistrato/utenteRegistrato/idUR
->per ogni elemento voglio sapere $mail, 				$mail=/database/tabUtenteRegistrato/utenteRegistrato[@idUR=$idUtente]/mail
->il nome, cognome, codice fiscale e data di nascita 	$campo=/database/tabUtenteRegistrato/utenteRegistrato[@idUR=$idUtente]/campo
->voglio sapere il ruolo
	->se $idcompare nella tabella AMMINISTRATORE 		if(ESISTE /database/tabAmministratore/Amministratore[@idA=$id])
		->se $flagSA true => scrivo che si tratta dell'SA del sito $flagSA=/database/tabAmministratore/Amministratore[@idUR=$id]/superAdmin
		->altrimenti =>scrivo che è amministratore
	->alrtimenti si tratta di un semplice cliente
voglio poter trasformare un semplice cliente in amministratore
o rendere cliente una voce di amministratore

8-A)CREARE UN NUOVO AMMINISTRATORE
->scelgo l'utente da rendere amministratore
->perl salva l'id dell'utente 							$idNewAmm=/database/tabUtenteRegistrato/utenteRegistrato[mail=$mailcliccata]/@idUR
->creo sulla tabella tabAmministratore
un nuovo record con @idUR=$idNewAll
->aggiorno pagina

8-B)ELIMINARE UN AMMINISTRATORE
->scelgo l'amministratore da cancellare
->perl salva l'id dell'utente 							$idDaEliminare=/database/tabUtenteRegistrato/utenteRegistrato[mail=$mailcliccata]/@idAm (? è ancora questa
														la chiave interna di amministratore giusto?)
->cerco record sulla tabella tabAmministratore
con @idUR=$idDaEliminare
->elimino il nodo dalla tabella Amministratore, resta su utente registrato
->aggiorno pagina

8-C)BANNA UN UTENTE
->scelgo l'utente registrato da bloccare
->perl salva l'id dell'utente 							$idDaEliminare=/database/tabUtenteRegistrato/utenteRegistrato[mail=$mailcliccata]/@idUR
->cerco record sulla tabella tabUtenteRegistrato
con @idUR=$idDaEliminare
->cambio il valre del sottoelemento 
flagAttivo da true a false 								$modificaFlag=/database/tabUtenteRegistrato/utenteRegistrato[@idUR=$idDaEliminare]/flagAttivo
														=>$modificaFlag=False
														=>salva su xml
->aggiorno pagina
